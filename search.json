[{"path":"https://pawelqs.github.io/cevomod/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 cevomod authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://pawelqs.github.io/cevomod/articles/get_started.html","id":"cumulative-tails","dir":"Articles","previous_headings":"","what":"Cumulative tails","title":"Get Started","text":"","code":"# tcga_brca_test %>% #   calc_cumulative_tails() %>% #   plot(scales = \"loglog\")  tcga_brca_test %>%   plot_cumulative_tails(size = 0.5, scale_y = FALSE)"},{"path":"https://pawelqs.github.io/cevomod/articles/get_started.html","id":"sfs-with-mut-annotation","dir":"Articles","previous_headings":"","what":"SFS with mut annotation","title":"Get Started","text":"","code":"plot_SFS(tcga_brca_test, geom = \"line\") +   layer_mutations(tcga_brca_test, drivers = \"BRCA\", shape = \"variant_classification\") #> Warning in ggrepel::geom_label_repel(aes(x = .data$VAF, shape = .data[[shape]], #> : Ignoring unknown aesthetics: shape #> Warning: ggrepel: 59 unlabeled data points (too many overlaps). Consider #> increasing max.overlaps plot_SFS(tcga_brca_test) +   layer_mutations(tcga_brca_test, drivers = \"BRCA\", shape = \"impact\") #> Warning in geom_bar(join_aes(bar_mapping, mapping), stat = \"identity\", alpha = #> alpha, : Ignoring unknown aesthetics: width #> Warning in ggrepel::geom_label_repel(aes(x = .data$VAF, shape = .data[[shape]], #> : Ignoring unknown aesthetics: shape #> Warning: ggrepel: 15 unlabeled data points (too many overlaps). Consider #> increasing max.overlaps #> Warning: ggrepel: 8 unlabeled data points (too many overlaps). Consider #> increasing max.overlaps #> Warning: ggrepel: 19 unlabeled data points (too many overlaps). Consider #> increasing max.overlaps #> Warning: ggrepel: 16 unlabeled data points (too many overlaps). Consider #> increasing max.overlaps"},{"path":"https://pawelqs.github.io/cevomod/articles/get_started.html","id":"snvs-plots","dir":"Articles","previous_headings":"","what":"SNVs plots","title":"Get Started","text":"","code":"p1 <- tcga_brca_test %>%   plot_mutations(drivers = \"BRCA\", shape = \"variant_classification\")  p2 <- tcga_brca_test %>%   plot_mutations(     genes = c(\"TP53\", \"BRCA1\", \"KMT2C\", \"ERBB2\"),     mark_genes = c(\"TP53\", \"BRCA1\", \"ERBB2\"),     y = \"samples\",     shape = \"impact\")  p1 / p2 + plot_layout(heights = c(3, 1))"},{"path":"https://pawelqs.github.io/cevomod/articles/get_started.html","id":"mf-1f","dir":"Articles","previous_headings":"","what":"M(f) ~ 1/f","title":"Get Started","text":"","code":"tcga_brca_test %>%   plot_Mf_1f() +   scale_color_brewer(palette = \"Dark2\") tcga_brca_test %>%   plot_Mf_1f(from = 0.05, to = 0.5, scale = FALSE) # geom_smooth() +   # coord_cartesian(xlim = c(1/0.1, 1/0.25)) +   # facet_wrap(~sample_id, scales = \"free\") # library(neutralitytestr) #  # neutralitytest_res <- snvs_test %>% #   group_by(sample_id) %>% #   nest() %>% #   deframe() %>% #   map(\"VAF\") %>% #   map(neutralitytest, read_depth = 100.0, fmin = 0.11, fmax = 0.2) #  # neutralitytest_res %>% #   map(plot_all) # data(\"snvs_AMLRO\") #  # plot_SFS(snvs_AMLRO, geom = \"bar\", show.legend = FALSE) + #   facet_wrap(~patient_id, scales = \"free\") + #   layer_mutations(drivers = \"LAML\", color = \"black\")"},{"path":"https://pawelqs.github.io/cevomod/articles/get_started.html","id":"fit-neutral-models","dir":"Articles","previous_headings":"","what":"Fit neutral models","title":"Get Started","text":"","code":"cd <- tcga_brca_test |>    calc_Mf_1f() |>    calc_SFS() |>    fit_williams_neutral_models(rsq_treshold = 0.99) #> Calculating Williams's M(f) ~ 1/f statistics #> Fitting williams neutral models... plot(cd$models$Mf_1f, from = 0.05, to = 0.3, scale = FALSE) +   layer_lm_fits(cd) +   scale_color_pnw() # exp <- models |>  #   slice(1) |>  #   expand_grid(x = seq(0.08, 1, by = 0.01)) |>  #   mutate( #     neutr = (x >= from & x <= to), #     y = (a/-90)/x^2 #   ) #  # plot_SFS(tcga_brca_test, geom = \"bar\", show.legend = FALSE, color = \"white\", alpha = 0.9) + #   facet_wrap(~sample_id, scales = \"free\") + #   scale_color_pnw() + #   scale_fill_pnw() + #   layer_mutations(drivers = \"BRCA\", color = \"black\") + #   geom_line(aes(x, y), data = exp, color = \"black\", size = 1, linetype = \"dashed\") + #   geom_line(aes(x, y), data = exp |> filter(neutr), color = \"black\", size = 1) fake_VAFs <- generate_neutral_snvs(mut_rate = 10, sample_below = 0.05, resolution = 0.001) fake_VAFs #> # A tibble: 255,760 × 15 #>    patient_id sample_id sample chrom   pos gene_symbol ref   alt   ref_reads #>    <chr>      <chr>     <chr>  <chr> <int> <chr>       <chr> <chr>     <dbl> #>  1 S1         S1        tumor  NA       NA NA          NA    NA           99 #>  2 S1         S1        tumor  NA       NA NA          NA    NA           99 #>  3 S1         S1        tumor  NA       NA NA          NA    NA           99 #>  4 S1         S1        tumor  NA       NA NA          NA    NA           99 #>  5 S1         S1        tumor  NA       NA NA          NA    NA           99 #>  6 S1         S1        tumor  NA       NA NA          NA    NA           99 #>  7 S1         S1        tumor  NA       NA NA          NA    NA           99 #>  8 S1         S1        tumor  NA       NA NA          NA    NA           99 #>  9 S1         S1        tumor  NA       NA NA          NA    NA           99 #> 10 S1         S1        tumor  NA       NA NA          NA    NA           99 #> # ℹ 255,750 more rows #> # ℹ 6 more variables: alt_reads <dbl>, impact <chr>, VAF <dbl>, DP <dbl>, #> #   n <dbl>, mut_id <chr>"},{"path":"https://pawelqs.github.io/cevomod/articles/get_started.html","id":"dndscv","dir":"Articles","previous_headings":"","what":"dNdScv","title":"Get Started","text":"","code":"# rm(list = ls()) # library(dndscv) # library(cevomod) # # library(rlang) #  # data(snvs_AMLRO) #  # mutations <- snvs_AMLRO %>% #   mutate(chr = str_replace(chrom, \"chr\", \"\")) %>% #   select(sampleID = patient_id, chr, pos, ref, alt) %>% #   unique() %>% #   head(10000) #  # myenv <- new.env(parent = parent.env(globalenv())) # local({ #     dndscv2 <- function (mutations) { #       dndsout <- dndscv::dndscv(mutations) #       dndsout #     } # }, envir = myenv) #  # environment(myenv$dndscv2) <- myenv # # myenv$dndscv2 <- dndscv::dndscv # dndsout <- myenv$dndscv2(mutations) # # environment(fun2) = myenv # # fun2() #  # # eval( # #   {dndsout <- dndscv::dndscv(mutations)}, # #   envir = new.env() # # ) # # mutations <- snvs_AMLRO %>% #   mutate(chr = str_replace(chrom, \"chr\", \"\")) %>% #   select(sampleID = patient_id, chr, pos, ref, alt) %>% #   unique() # dndsout <- dndscv(mutations)"},{"path":"https://pawelqs.github.io/cevomod/articles/get_started.html","id":"model-fitting","dir":"Articles","previous_headings":"","what":"Model fitting","title":"Get Started","text":"","code":"# snvs_AMLRO <- readRDS(\"../../analyses/data/snvs_AMLRO.Rds\") # snvs_AMLRO %>% #   ggplot(aes(VAF)) + #   geom_histogram() + #   facet_wrap(~sample_id, scales = \"free\") # SFS <- snvs_AMLRO %>% #   filter(sample_id == \"AMLRO-1_Dx.Dx\") %>% #   group_by(sample_id) %>% #   calc_SFS() #  # plot(SFS, geom = geom_bar(aes(fill = sample_id), stat = \"identity\")) # model_fun <- function(x, A, K, p1) { #   A * poweRlaw::dplcon(x, xmin = 1, alpha = 2) + K * dbinom(x, 100, p1) # } #  # plot(model_fun(1:100, 100, 100, 0.5)) #  # fit_model <- function(SFS, depth = 100) { #   dt <- SFS %>% #     mutate(x = floor(VAF*100)) #    #   fit <- nls(y ~ model_fun(x, A, K, p1), data = dt, start = list(A = 1000, K = 100, p1 = 0.5)) #   params <- summary(fit)$coefficients #   params <- params[, \"Estimate\"] %>% #     as.list() #    #   dt$fit <- model_fun(dt$x, params$A, params$K, params$p1) # } #  # ggplot(dt, aes(x)) + #   geom_bar(aes(x, y), stat = \"identity\") + #   geom_point(aes(x, fit)) # snvs_AMLRO <- snvs_AMLRO %>% #   separate(AD, into = c(\"ref_reads\", \"alt_reads\")) %>% #   mutate_at(c(\"ref_reads\", \"alt_reads\"), parse_integer) #  # snvs_AMLRO %>% #   ggplot(aes(DP)) + #   geom_histogram() + #   scale_x_log10() + #   geom_vline() # fun <- function(x, a) { #   dpois() #   poweRlaw::dplcon(x, 1, a) + binomi #    # } #  # fun(1:10, 2) %>% #   plot() #  # fit <- nls(y ~ fun(VAF, a), data = SFS, start = list(a = 1)) # fit # x <- fit %>% #   summary() # a <- x$coefficients[\"a\", \"Estimate\"] #  # SFS %>% #   mutate( #     fit = fun(VAF, a) #   ) %>% #   ggplot() + #   geom_bar(aes(VAF, y), stat = \"identity\") + #   geom_point(aes(VAF, fit)) #  # plot(dbinom(1:10, 10, 0.5)) # k <- 2:100 # n <- 100 # A <- 100 # K <- 100 # p0 <- 0.5 # p1 <- 0.5 #  # df <- tibble( #   k = k, #   yA = A/(k*(k-1)), #   yK = K * choose(n, k) * p0^(n-k) * p1^k, #   y = A/(k*(k-1)) + K * choose(n, k) * p0^(n-k) * p1^k  # ) #  # df # ggplot(df, aes(k, y)) + #   geom_point() + #   theme_minimal() # library(MASS) #  # x <- snvs_AMLRO %>% #   filter(sample_id == \"AMLRO-1_Dx.Dx\") %>% #   drop_na() %>% #   mutate(Qnk = as.integer(floor(VAF * 100))) # hist(x$Qnk) #  # d <- function(x, A, K, p0, p1) { #   n <- 100 #   A/(x*(x-1)) + K * choose(n, x) * p0^(n-x) * p1^x # } # d <- function(x, A) { #   n <- 100 #   # A/(x*(x-1)) #   poweRlaw::dplcon(x, 1, A) # } # plot(2:100, d(2:100, A = 100)) #  # # plot(1:100, d(1:100, A = 100, K = 100, p0 = 0.6, p1 = 0.4)) #  # fit <- fitdistr( #   x$Qnk,  #   densfun = d,  #   start = list(A = 100), #   lower = 1 # ) #  # fit <- fitdistr( #   x$Qnk,  #   densfun = d,  #   start = list(A = 100, K = 100, p0 = 0.6, p1 = 0.4), #   lower = 2, #   upper = 80 # ) #  # plot(poweRlaw::dplcon(1:100, 1, 2))"},{"path":"https://pawelqs.github.io/cevomod/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Paweł Kuś. Author, maintainer.","code":""},{"path":"https://pawelqs.github.io/cevomod/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Kuś P (2023). cevomod: Cancer Evolution Models. R package version 1.0.0, https://pawelqs.github.io/cevomod/.","code":"@Manual{,   title = {cevomod: Cancer Evolution Models},   author = {Paweł Kuś},   year = {2023},   note = {R package version 1.0.0},   url = {https://pawelqs.github.io/cevomod/}, }"},{"path":"https://pawelqs.github.io/cevomod/index.html","id":"cevomod-","dir":"","previous_headings":"","what":"Cancer Evolution Models","title":"Cancer Evolution Models","text":"goal cevomod …","code":""},{"path":"https://pawelqs.github.io/cevomod/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Cancer Evolution Models","text":"can install development version cevomod GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"pawelqs/cevomod\")"},{"path":"https://pawelqs.github.io/cevomod/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Cancer Evolution Models","text":"basic example shows solve common problem:","code":"library(cevomod) #>  #> Attaching package: 'cevomod' #> The following object is masked from 'package:stats': #>  #>     filter library(tidyverse) #> ── Attaching packages #> ─────────────────────────────────────── #> tidyverse 1.3.2 ── #> ✔ ggplot2 3.4.0.9000     ✔ purrr   0.3.5      #> ✔ tibble  3.1.8          ✔ dplyr   1.0.10     #> ✔ tidyr   1.2.0          ✔ stringr 1.5.0      #> ✔ readr   2.1.2          ✔ forcats 0.5.2      #> ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ── #> ✖ dplyr::filter() masks cevomod::filter(), stats::filter() #> ✖ dplyr::lag()    masks stats::lag() data(\"tcga_brca_test\")  cd <- run_cevomod(tcga_brca_test) plot_models(cd) +   layer_mutations(cd, drivers = \"BRCA\") #> Warning in geom_bar(aes(fill = .data$sample_id, width = .data$width), stat = #> \"identity\", : Ignoring unknown aesthetics: width #> Warning in ggrepel::geom_label_repel(aes(x = .data$VAF, shape #> = .data[[shape]], : Ignoring unknown aesthetics: shape #> Warning: ggrepel: 15 unlabeled data points (too many overlaps). Consider #> increasing max.overlaps #> Warning: ggrepel: 8 unlabeled data points (too many overlaps). Consider #> increasing max.overlaps #> Warning: ggrepel: 19 unlabeled data points (too many overlaps). Consider #> increasing max.overlaps #> Warning: ggrepel: 16 unlabeled data points (too many overlaps). Consider #> increasing max.overlaps"},{"path":"https://pawelqs.github.io/cevomod/reference/ITH.html","id":null,"dir":"Reference","previous_headings":"","what":"Intratumor heterogeneity — ITH","title":"Intratumor heterogeneity — ITH","text":"Intratumor heterogeneity","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/ITH.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Intratumor heterogeneity — ITH","text":"","code":"plot_ITH(object, ...)  # S3 method for cevodata plot_ITH(object, ...)  # S3 method for cevo_ITH_tbl plot(x, ...)  estimate_ITH(object, ...)"},{"path":"https://pawelqs.github.io/cevomod/reference/ITH.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Intratumor heterogeneity — ITH","text":"object object ... used x ITH tibble plot","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/Mf_1f.html","id":null,"dir":"Reference","previous_headings":"","what":"William's M(f) ~ 1/f statistics — Mf_1f","title":"William's M(f) ~ 1/f statistics — Mf_1f","text":"Creates  cevodata$models$Mf_1f tbl groupping variables : VAF n - number mutations VAF interval M(f) 1/f columns plot William's statistics","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/Mf_1f.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"William's M(f) ~ 1/f statistics — Mf_1f","text":"","code":"calc_Mf_1f(object, ...)  # S3 method for cevodata calc_Mf_1f(object, bins = 100, verbose = TRUE, ...)  # S3 method for cevo_snvs calc_Mf_1f(object, bins = 100, verbose = TRUE, ...)  plot_Mf_1f(object, ...)  # S3 method for cevodata plot_Mf_1f(   object,   bins = NULL,   from = 0.1,   to = 0.25,   scale = TRUE,   geom = \"point\",   ... )  get_Mf_1f(object, ...)  # S3 method for cevodata get_Mf_1f(object, model_name = \"Mf_1f\", verbose = TRUE, ...)"},{"path":"https://pawelqs.github.io/cevomod/reference/Mf_1f.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"William's M(f) ~ 1/f statistics — Mf_1f","text":"object SNVs tibble object ... arguments bins resolution cumulative tails calculation verbose verbose? min VAF plot max VAF plot scale scale data? geom ggplot geom use, eg. geom_line() model_name name slot Mf_1f statistics","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/Mf_1f.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"William's M(f) ~ 1/f statistics — Mf_1f","text":"ggplot obj","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/Mf_1f.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"William's M(f) ~ 1/f statistics — Mf_1f","text":"calc_Mf_1f(): Calculate Williams M(f) ~ 1/f calc_Mf_1f(cevodata): Calculate Williams M(f) ~ 1/f calc_Mf_1f(cevo_snvs): Calculate Williams M(f) ~ 1/f plot_Mf_1f(cevodata): Plot M(f) ~ 1/f get_Mf_1f(): Get Mf_1f get_Mf_1f(cevodata): Get Mf_1f","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/Mf_1f.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"William's M(f) ~ 1/f statistics — Mf_1f","text":"","code":"data(\"tcga_brca_test\") tcga_brca_test |>   calc_Mf_1f() #> Calculating Williams's M(f) ~ 1/f statistics #> <cevodata> dataset: TCGA-BRCA data #> Genome: hg37 #> SNV assays: TCGA (default) #> CNV assays: TCGA (default) #> 4 cases, 4 samples, 1 sample per case #> 21570 mutations total, 5392 +/- 1954 mutations per case #> Active models: williams_neutral_subclones  tcga_brca_test |>   plot_Mf_1f()"},{"path":"https://pawelqs.github.io/cevomod/reference/active_assays.html","id":null,"dir":"Reference","previous_headings":"","what":"Get/Set active assays of the cevodata object — active_assays","title":"Get/Set active assays of the cevodata object — active_assays","text":"Get/Set active assays cevodata object","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/active_assays.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get/Set active assays of the cevodata object — active_assays","text":"","code":"default_SNVs(object, ...)  # S3 method for cevodata default_SNVs(object, ...)  default_SNVs(object, ...) <- value  # S3 method for cevodata default_SNVs(object, ...) <- value  default_CNVs(object, ...)  # S3 method for cevodata default_CNVs(object, ...)  default_CNVs(object, ...) <- value  # S3 method for cevodata default_CNVs(object, ...) <- value"},{"path":"https://pawelqs.github.io/cevomod/reference/active_assays.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get/Set active assays of the cevodata object — active_assays","text":"object object ... arguments value name new default assay","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/active_assays.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Get/Set active assays of the cevodata object — active_assays","text":"default_SNVs(cevodata): Get default SNVs assay cevodata default_SNVs(cevodata) <- value: Set default SNVs assay cevodata default_CNVs(cevodata): Get default CNVs assay cevodata default_CNVs(cevodata) <- value: Set default CNVs assay cevodata","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/annotate_mutation_contexts.html","id":null,"dir":"Reference","previous_headings":"","what":"Annotate mutation context and types for mutation signatures analysis — annotate_mutation_contexts","title":"Annotate mutation context and types for mutation signatures analysis — annotate_mutation_contexts","text":"Annotate mutation context types mutation signatures analysis","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/annotate_mutation_contexts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Annotate mutation context and types for mutation signatures analysis — annotate_mutation_contexts","text":"","code":"annotate_mutation_contexts(snvs, bsgenome)"},{"path":"https://pawelqs.github.io/cevomod/reference/annotate_mutation_contexts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Annotate mutation context and types for mutation signatures analysis — annotate_mutation_contexts","text":"snvs snvs tbl bsgenome BSGenome object","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/as_cevo_snvs.html","id":null,"dir":"Reference","previous_headings":"","what":"Create cevo_snvs tibble — as_cevo_snvs","title":"Create cevo_snvs tibble — as_cevo_snvs","text":"Create cevo_snvs tibble","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/as_cevo_snvs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create cevo_snvs tibble — as_cevo_snvs","text":"","code":"as_cevo_snvs(snvs)"},{"path":"https://pawelqs.github.io/cevomod/reference/as_cevo_snvs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create cevo_snvs tibble — as_cevo_snvs","text":"snvs tibble","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/assays.html","id":null,"dir":"Reference","previous_headings":"","what":"Get/Add SNV/CNV data from the cevodata dataset — assays","title":"Get/Add SNV/CNV data from the cevodata dataset — assays","text":"Get/Add SNV/CNV data cevodata dataset","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/assays.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get/Add SNV/CNV data from the cevodata dataset — assays","text":"","code":"add_SNV_data(object, ...)  # S3 method for cevodata add_SNV_data(object, snvs, name = NULL, ...)  add_CNV_data(object, ...)  # S3 method for cevodata add_CNV_data(object, cnvs, name = NULL, ...)  SNVs(object, ...)  # S3 method for cevodata SNVs(object, which = object$active_SNVs, ...)  get_SNVs_wider(object, fill_na = NULL)  CNVs(object, ...)  # S3 method for cevodata CNVs(object, which = object$active_CNVs, ...)"},{"path":"https://pawelqs.github.io/cevomod/reference/assays.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get/Add SNV/CNV data from the cevodata dataset — assays","text":"object cevodata object ... arguments snvs tibble SNVs name name SNVs/CNVs assay cnvs tibble CNVs assay use - uses active_SNVs nonei fill_na fill missing value","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/assays.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get/Add SNV/CNV data from the cevodata dataset — assays","text":"tibble","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/assays.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Get/Add SNV/CNV data from the cevodata dataset — assays","text":"add_SNV_data(cevodata): Add new SNVs cevodata add_CNV_data(cevodata): Add new CNVs cevodata SNVs(cevodata): Get SNVs cevodata dataset get_SNVs_wider(): Get SNVs wide table form CNVs(cevodata): Get CNVs cevodata dataset","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/cevo_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Add metadata to the cevodata object — cevo_metadata","title":"Add metadata to the cevodata object — cevo_metadata","text":"Add metadata cevodata object","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/cevo_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add metadata to the cevodata object — cevo_metadata","text":"","code":"add_patient_data(object, ...)  # S3 method for cevodata add_patient_data(object, data, ...)  add_sample_data(object, ...)  # S3 method for cevodata add_sample_data(object, data, ...)"},{"path":"https://pawelqs.github.io/cevomod/reference/cevo_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add metadata to the cevodata object — cevo_metadata","text":"object object ... arguments data name new default assay","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/cevo_metadata.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Add metadata to the cevodata object — cevo_metadata","text":"add_patient_data(cevodata): Add patient data cevodata object add_sample_data(cevodata): Add samples' data cevodata object","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/cevomod-package.html","id":null,"dir":"Reference","previous_headings":"","what":"cevomod: Cancer Evolution Models — cevomod-package","title":"cevomod: Cancer Evolution Models — cevomod-package","text":"Cancer Evolutionary Models. Set methods facilitating analysis Cancer Evolution. Developped PhD.","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/cevomod-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"cevomod: Cancer Evolution Models — cevomod-package","text":"Maintainer: Paweł Kuś kpawel2210@gmail.com (ORCID)","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/cnv_plots.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot CNV heatmap — cnv_plots","title":"Plot CNV heatmap — cnv_plots","text":"Plot CNV heatmap","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/cnv_plots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot CNV heatmap — cnv_plots","text":"","code":"plot_CNV_heatmap(object, ...)  # S3 method for cevodata plot_CNV_heatmap(object, meta_field, ...)  heatmap_granges(   granges,   meta_field,   row_groups = NULL,   keep_sites_present_in = floor(0.8 * length(granges)),   color_breaks = c(0, 2, 6),   colors = c(\"dodgerblue3\", \"white\", \"firebrick3\"),   window_width = 1e+06,   upper_limit = 6,   cluster_rows = FALSE,   show_row_names = TRUE,   show_column_names = FALSE,   use_raster = TRUE,   cluster_columns = FALSE,   border = TRUE,   legend_params = NULL,   verbose = TRUE,   ... )"},{"path":"https://pawelqs.github.io/cevomod/reference/cnv_plots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot CNV heatmap — cnv_plots","text":"object cevodata ... arguments passed Heatmap meta_field column plot granges granges list row_groups vector keep_sites_present_in floor(0.8*length(granges)) color_breaks c(0, 2, 6) colors c(\"dodgerblue3\", \"white\", \"firebrick3\") window_width window_width upper_limit upper limit color scale cluster_rows FALSE show_row_names TRUE show_column_names FALSE use_raster TRUE cluster_columns FALSE border TRUE legend_params goes Heatmap(heatmap_legend_param = .) verbose Verbose?","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/cnv_plots.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Plot CNV heatmap — cnv_plots","text":"plot_CNV_heatmap(cevodata): Plot CNVs heatmap_granges(): Plot Granges list","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/colors.html","id":null,"dir":"Reference","previous_headings":"","what":"Some colors — colors","title":"Some colors — colors","text":"colors","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/colors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Some colors — colors","text":"","code":"colors"},{"path":"https://pawelqs.github.io/cevomod/reference/colors.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Some colors — colors","text":"object class cevo_colors (inherits list) length 2.","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/compare_models.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare fits from many models — compare_models","title":"Compare fits from many models — compare_models","text":"Compare fits many models","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/compare_models.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare fits from many models — compare_models","text":"","code":"compare_models(   object,   model_names,   column_name,   linetype = \"solid\",   linewidth = 1,   ... )"},{"path":"https://pawelqs.github.io/cevomod/reference/compare_models.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare fits from many models — compare_models","text":"object cevodata object model_names models compare column_name residuals_* column plot linetype solid linewidth 1 ... arguments passed plot_SFS()","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/count_mutation_types.html","id":null,"dir":"Reference","previous_headings":"","what":"Get matrix of per sample mutation types for mutation signatures analysis — count_mutation_types","title":"Get matrix of per sample mutation types for mutation signatures analysis — count_mutation_types","text":"Get matrix per sample mutation types mutation signatures analysis","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/count_mutation_types.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get matrix of per sample mutation types for mutation signatures analysis — count_mutation_types","text":"","code":"count_mutation_types(snvs)"},{"path":"https://pawelqs.github.io/cevomod/reference/count_mutation_types.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get matrix of per sample mutation types for mutation signatures analysis — count_mutation_types","text":"snvs annotated snvs tbl","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/count_mutation_types.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get matrix of per sample mutation types for mutation signatures analysis — count_mutation_types","text":"wide tbl","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/count_mutations_by_component.html","id":null,"dir":"Reference","previous_headings":"","what":"Get numbers of neutral, clonal, subclonal ect variants — count_mutations_by_component","title":"Get numbers of neutral, clonal, subclonal ect variants — count_mutations_by_component","text":"Get numbers neutral, clonal, subclonal ect variants","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/count_mutations_by_component.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get numbers of neutral, clonal, subclonal ect variants — count_mutations_by_component","text":"","code":"count_mutations_by_component(   object,   models_name = active_models(object),   include_filtered = FALSE )  count_neutral_tail_mutations(object, models_name = active_models(object))  count_neutral_tail_filtered_mutations(   object,   models_name = active_models(object) )"},{"path":"https://pawelqs.github.io/cevomod/reference/count_mutations_by_component.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get numbers of neutral, clonal, subclonal ect variants — count_mutations_by_component","text":"object cevodata object models_name models name include_filtered include component filtered mutations","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/count_mutations_by_component.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Get numbers of neutral, clonal, subclonal ect variants — count_mutations_by_component","text":"count_neutral_tail_mutations(): Count neutral tail mutations count_neutral_tail_filtered_mutations(): Count filtered mutations VAF higher 0.01","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/cumulative_tails.html","id":null,"dir":"Reference","previous_headings":"","what":"Cumulative tails — cumulative_tails","title":"Cumulative tails — cumulative_tails","text":"Creates  cevodata$models$cumulative_tails tbl groupping variables : n column number mutations VAF interval x y columns describing cumulative tails y_scaled y values scaled range 0-1","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/cumulative_tails.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cumulative tails — cumulative_tails","text":"","code":"calc_cumulative_tails(object, ...)  # S3 method for cevodata calc_cumulative_tails(object, bins = 100, ...)  # S3 method for cevo_snvs calc_cumulative_tails(object, bins = 100, ...)  plot_cumulative_tails(object, ...)  # S3 method for cevodata plot_cumulative_tails(object, scale_y = TRUE, scales = \"loglog\", ...)"},{"path":"https://pawelqs.github.io/cevomod/reference/cumulative_tails.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cumulative tails — cumulative_tails","text":"object SNVs tibble object ... passed stat_cumulative_tail bins resolution cumulative tails calculation scale_y scale y vaules 1? scales loglog/semilog","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/cumulative_tails.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cumulative tails — cumulative_tails","text":"ggplot obj","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/cumulative_tails.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Cumulative tails — cumulative_tails","text":"calc_cumulative_tails(cevodata): Calculate cumulative tails calc_cumulative_tails(cevo_snvs): Calculate cumulative tails plot_cumulative_tails(cevodata): Shortcut plot cum tails SNVs dataframe","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/cumulative_tails.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cumulative tails — cumulative_tails","text":"","code":"data(\"tcga_brca_test\") tcga_brca_test |>   calc_cumulative_tails() #> <cevodata> dataset: TCGA-BRCA data #> Genome: hg37 #> SNV assays: TCGA (default) #> CNV assays: TCGA (default) #> 4 cases, 4 samples, 1 sample per case #> 21570 mutations total, 5392 +/- 1954 mutations per case #> Active models: williams_neutral_subclones  tcga_brca_test |>   plot_cumulative_tails()"},{"path":"https://pawelqs.github.io/cevomod/reference/cut_f_intervals.html","id":null,"dir":"Reference","previous_headings":"","what":"Cut f or VAF into intervals — cut_f_intervals","title":"Cut f or VAF into intervals — cut_f_intervals","text":"Cut f VAF intervals","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/cut_f_intervals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cut f or VAF into intervals — cut_f_intervals","text":"","code":"cut_f_intervals(object, ...)  # S3 method for cevo_snvs cut_f_intervals(object, bins = NULL, column = \"VAF\", ...)"},{"path":"https://pawelqs.github.io/cevomod/reference/cut_f_intervals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cut f or VAF into intervals — cut_f_intervals","text":"object object ... params bins number bins column name column frequencies, VAF f","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/driver_genes.html","id":null,"dir":"Reference","previous_headings":"","what":"Tbl of driver genes from Bailey, Ding et al. 'Comprehensive Characterization\nof Cancer Driver Genes and Mutations', Cell, 2-18\nhttps://doi.org/10.1016/j.cell.2018.02.060 — driver_genes","title":"Tbl of driver genes from Bailey, Ding et al. 'Comprehensive Characterization\nof Cancer Driver Genes and Mutations', Cell, 2-18\nhttps://doi.org/10.1016/j.cell.2018.02.060 — driver_genes","text":"Tbl driver genes Bailey, Ding et al. 'Comprehensive Characterization Cancer Driver Genes Mutations', Cell, 2-18 https://doi.org/10.1016/j.cell.2018.02.060","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/evaluate_MC_runs.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate Monte Carlo results — evaluate_MC_runs","title":"Evaluate Monte Carlo results — evaluate_MC_runs","text":"Evaluate Monte Carlo results","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/evaluate_MC_runs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate Monte Carlo results — evaluate_MC_runs","text":"","code":"evaluate_MC_runs(mc_arr, rowsums_pred, colsums_pred)"},{"path":"https://pawelqs.github.io/cevomod/reference/evaluate_MC_runs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate Monte Carlo results — evaluate_MC_runs","text":"mc_arr Monte Carlo simutations array rowsums_pred expected row sums colsums_pred predicted col sums","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/evo_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Get evolutionary parameters from the model — evo_params","title":"Get evolutionary parameters from the model — evo_params","text":"Code functions re-formatted code MOBSTER R package Caravagna, Williams et al. https://github.com/caravagnalab/mobster","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/evo_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get evolutionary parameters from the model — evo_params","text":"","code":"get_mutation_rates(object, ...)  # S3 method for cevodata get_mutation_rates(object, models_name = \"williams_neutral\", ...)  # S3 method for tbl_df get_mutation_rates(object, ...)  get_selection_coefficients(object, ...)  # S3 method for cevodata get_selection_coefficients(   object,   models_name = \"williams_neutral_subclones\",   Nmax = 10^10,   ... )  # S3 method for tbl_df get_selection_coefficients(object, Nmax = 10^10, ...)"},{"path":"https://pawelqs.github.io/cevomod/reference/evo_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get evolutionary parameters from the model — evo_params","text":"object cevodata object models tibble ... arguments models_name models_name Nmax Time tumour sampled (tumour doublings)","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/evo_params.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Get evolutionary parameters from the model — evo_params","text":"get_mutation_rates(): Get mutation rates Williams Use ... get_mutation_rates(cevodata): Get mutation rates Williams get_mutation_rates(tbl_df): Get mutation rates Williams get_selection_coefficients(): Get subclonal selection coefficients Williams Use properties subclone fit calculate selection intensity, selection defined relative growth rates host tumour cell populations (\\(\\lambda h\\)) vs subclone (\\(\\lambda s\\)): $$1+s=\\lambda h / \\lambda s$$ get_selection_coefficients(cevodata): Get subclonal selection coefficients Williams get_selection_coefficients(tbl_df): Get subclonal selection coefficients Williams","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/fill_na.html","id":null,"dir":"Reference","previous_headings":"","what":"Fill na values in the object — fill_na","title":"Fill na values in the object — fill_na","text":"Fill na values object","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/fill_na.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fill na values in the object — fill_na","text":"","code":"fill_na(object, val)"},{"path":"https://pawelqs.github.io/cevomod/reference/fill_na.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fill na values in the object — fill_na","text":"object object val value fill NAs","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/filter.cevodata.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter/subset cevodata object — filter.cevodata","title":"Filter/subset cevodata object — filter.cevodata","text":"wrapper around dplyr::filter function can used subset cevodata object. Works like dplyr::filter, performs filtering metadata, filters SNVs, CNVs, clones models keeping samples kept metadata","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/filter.cevodata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter/subset cevodata object — filter.cevodata","text":"","code":"# S3 method for cevodata filter(.data, ..., .preserve = FALSE)"},{"path":"https://pawelqs.github.io/cevomod/reference/filter.cevodata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter/subset cevodata object — filter.cevodata","text":".data cevodata object ... expression passed dplyr::filter(...) .preserve Relevant .data input grouped. .preserve = FALSE (default), grouping structure recalculated based resulting data, otherwise grouping kept .","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/filter.cevodata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter/subset cevodata object — filter.cevodata","text":"cevodata object","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/filter_SNVs_by_regions.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter SNVs by position: using regions tbl or bed file — filter_SNVs_by_regions","title":"Filter SNVs by position: using regions tbl or bed file — filter_SNVs_by_regions","text":"Filter SNVs position: using regions tbl bed file","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/filter_SNVs_by_regions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter SNVs by position: using regions tbl or bed file — filter_SNVs_by_regions","text":"","code":"filter_SNVs_by_regions(snvs, regions = NULL, bed_file = NULL)"},{"path":"https://pawelqs.github.io/cevomod/reference/filter_SNVs_by_regions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter SNVs by position: using regions tbl or bed file — filter_SNVs_by_regions","text":"snvs snvs tbl columns: sample_id, chrom, pos regions regions tbl columns chrom, start, end bed_file bed file","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/fit_mobster.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit Mobster models — fit_mobster","title":"Fit Mobster models — fit_mobster","text":"Fit Mobster models","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/fit_mobster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit Mobster models — fit_mobster","text":"","code":"fit_mobster(object, ...)  # S3 method for cevodata fit_mobster(object, ...)"},{"path":"https://pawelqs.github.io/cevomod/reference/fit_mobster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit Mobster models — fit_mobster","text":"object object ... args passed mobster::fit_mobster()","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/fit_subclones.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit subclonal distributions to neutral model residuals — fit_subclones_bmix","title":"Fit subclonal distributions to neutral model residuals — fit_subclones_bmix","text":"Fit subclonal distributions neutral model residuals","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/fit_subclones.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit subclonal distributions to neutral model residuals — fit_subclones_bmix","text":"","code":"fit_subclones_bmix(   object,   N = 1:3,   snvs_name = default_SNVs(object),   powerlaw_model_name = active_models(object),   upper_VAF_limit = 0.75,   verbose = TRUE )  fit_subclones(   object,   N = 1:3,   powerlaw_model_name = active_models(object),   upper_VAF_limit = 0.75,   verbose = TRUE )"},{"path":"https://pawelqs.github.io/cevomod/reference/fit_subclones.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit subclonal distributions to neutral model residuals — fit_subclones_bmix","text":"object object N vector numbers clones test snvs_name snvs use? powerlaw_model_name residual powerlaw model use? williams_neutral/tung_durrett upper_VAF_limit ignore variants f higher verbose verbose?","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/fit_subclones.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Fit subclonal distributions to neutral model residuals — fit_subclones_bmix","text":"fit_subclones_bmix(): Fit subclonal distributions neutral model residuals using BMix","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/fix_powerlaw_N_mutations.html","id":null,"dir":"Reference","previous_headings":"","what":"Fill N_mutations column for powerlaw models — fix_powerlaw_N_mutations","title":"Fill N_mutations column for powerlaw models — fix_powerlaw_N_mutations","text":"Fill N_mutations column powerlaw models","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/fix_powerlaw_N_mutations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fill N_mutations column for powerlaw models — fix_powerlaw_N_mutations","text":"","code":"fix_powerlaw_N_mutations(models, cd, models_name)"},{"path":"https://pawelqs.github.io/cevomod/reference/fix_powerlaw_N_mutations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fill N_mutations column for powerlaw models — fix_powerlaw_N_mutations","text":"models tibble get_models() cd cevodata object models_name models name","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/generate_neutral_snvs.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate neutral SNVs — generate_neutral_snvs","title":"Generate neutral SNVs — generate_neutral_snvs","text":"Generate neutral SNVs","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/generate_neutral_snvs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate neutral SNVs — generate_neutral_snvs","text":"","code":"generate_neutral_snvs(   mut_rate = 2,   sample_below = 0.15,   resolution = 0.01,   DP = 100 )"},{"path":"https://pawelqs.github.io/cevomod/reference/generate_neutral_snvs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate neutral SNVs — generate_neutral_snvs","text":"mut_rate f(x) = /x^2 formula sample_below mutations value sampled resolution resolution DP sequncing depth","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/generate_neutral_snvs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate neutral SNVs — generate_neutral_snvs","text":"SNVs tibble","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/generate_neutral_snvs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate neutral SNVs — generate_neutral_snvs","text":"","code":"generate_neutral_snvs() #> # A tibble: 1,532 × 15 #>    patient_id sample_id sample chrom   pos gene_symbol ref   alt   ref_reads #>    <chr>      <chr>     <chr>  <chr> <int> <chr>       <chr> <chr>     <dbl> #>  1 S1         S1        tumor  NA       NA NA          NA    NA           98 #>  2 S1         S1        tumor  NA       NA NA          NA    NA           97 #>  3 S1         S1        tumor  NA       NA NA          NA    NA           97 #>  4 S1         S1        tumor  NA       NA NA          NA    NA           97 #>  5 S1         S1        tumor  NA       NA NA          NA    NA           96 #>  6 S1         S1        tumor  NA       NA NA          NA    NA           96 #>  7 S1         S1        tumor  NA       NA NA          NA    NA           96 #>  8 S1         S1        tumor  NA       NA NA          NA    NA           96 #>  9 S1         S1        tumor  NA       NA NA          NA    NA           96 #> 10 S1         S1        tumor  NA       NA NA          NA    NA           96 #> # ℹ 1,522 more rows #> # ℹ 6 more variables: alt_reads <dbl>, impact <chr>, VAF <dbl>, DP <dbl>, #> #   n <dbl>, mut_id <chr>"},{"path":"https://pawelqs.github.io/cevomod/reference/geom_powerlaw.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot power-law curve — geom_powerlaw","title":"Plot power-law curve — geom_powerlaw","text":"Plot power-law curve","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/geom_powerlaw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot power-law curve — geom_powerlaw","text":"","code":"geom_powerlaw(A, alpha, mapping, ylim = 1000, color = \"#54b4FA\", ...)"},{"path":"https://pawelqs.github.io/cevomod/reference/geom_powerlaw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot power-law curve — geom_powerlaw","text":"alpha power mapping mapping, x required ylim max y allowed color color ... arguments passed geom_line","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/get_CNVs_var_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Get names of CNV variables — get_CNVs_var_names","title":"Get names of CNV variables — get_CNVs_var_names","text":"Get names CNV variables","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/get_CNVs_var_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get names of CNV variables — get_CNVs_var_names","text":"","code":"get_CNVs_var_names(object, ...)  # S3 method for cevodata get_CNVs_var_names(object, which = default_CNVs(object), ...)"},{"path":"https://pawelqs.github.io/cevomod/reference/get_CNVs_var_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get names of CNV variables — get_CNVs_var_names","text":"object object ... arguments CNV assay use","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/get_CNVs_var_names.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Get names of CNV variables — get_CNVs_var_names","text":"get_CNVs_var_names(cevodata): Get CNV variable names cevodata object","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/get_model_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Get model names — get_model_names","title":"Get model names — get_model_names","text":"Get model names","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/get_model_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get model names — get_model_names","text":"","code":"get_model_names(object)"},{"path":"https://pawelqs.github.io/cevomod/reference/get_model_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get model names — get_model_names","text":"object object","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/get_models.html","id":null,"dir":"Reference","previous_headings":"","what":"Get models from the object — get_models","title":"Get models from the object — get_models","text":"Get models object","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/get_models.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get models from the object — get_models","text":"","code":"get_models(object, ...)  # S3 method for cevodata get_models(object, which = active_models(object), best_only = TRUE, ...)"},{"path":"https://pawelqs.github.io/cevomod/reference/get_models.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get models from the object — get_models","text":"object object get models ... arguments chr models get best_only lgl return best models?","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/get_models.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Get models from the object — get_models","text":"get_models(cevodata): Get models cevodata object","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/get_non_zero_SFS_range.html","id":null,"dir":"Reference","previous_headings":"","what":"Get range of non empty SFS bins — get_non_zero_SFS_range","title":"Get range of non empty SFS bins — get_non_zero_SFS_range","text":"Get range non empty SFS bins","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/get_non_zero_SFS_range.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get range of non empty SFS bins — get_non_zero_SFS_range","text":"","code":"get_non_zero_SFS_range(   sfs,   allowed_zero_bins = 1,   y_treshold = 1,   y_threshold_pct = 0.01 )"},{"path":"https://pawelqs.github.io/cevomod/reference/get_non_zero_SFS_range.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get range of non empty SFS bins — get_non_zero_SFS_range","text":"sfs SFS allowed_zero_bins number allowed empty bins interval y_treshold bins less mutations considered empty y_threshold_pct bins less mutations param times height higherst peak considered empty","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/get_patient_mutation_burden.html","id":null,"dir":"Reference","previous_headings":"","what":"Get tumor mutation burden — get_patient_mutation_burden","title":"Get tumor mutation burden — get_patient_mutation_burden","text":"Get tumor mutation burden","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/get_patient_mutation_burden.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get tumor mutation burden — get_patient_mutation_burden","text":"","code":"get_patient_mutation_burden(object, snvs = default_SNVs(object))"},{"path":"https://pawelqs.github.io/cevomod/reference/get_patient_mutation_burden.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get tumor mutation burden — get_patient_mutation_burden","text":"object cevodata object snvs snvs slot","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/get_residuals.html","id":null,"dir":"Reference","previous_headings":"","what":"Get model residuals — get_residuals","title":"Get model residuals — get_residuals","text":"Get model residuals","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/get_residuals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get model residuals — get_residuals","text":"","code":"get_residuals(cd, models_name = cd$active_model)"},{"path":"https://pawelqs.github.io/cevomod/reference/get_residuals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get model residuals — get_residuals","text":"cd cevodata object models_name name models","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/get_sample_mutation_burden.html","id":null,"dir":"Reference","previous_headings":"","what":"Get sample mutation burden — get_sample_mutation_burden","title":"Get sample mutation burden — get_sample_mutation_burden","text":"Get sample mutation burden","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/get_sample_mutation_burden.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get sample mutation burden — get_sample_mutation_burden","text":"","code":"get_sample_mutation_burden(object, ...)  # S3 method for cevodata get_sample_mutation_burden(object, snvs = default_SNVs(object), ...)  # S3 method for cevo_snvs get_sample_mutation_burden(object, ...)"},{"path":"https://pawelqs.github.io/cevomod/reference/get_sample_mutation_burden.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get sample mutation burden — get_sample_mutation_burden","text":"object object ... arguments (currently nut used) snvs SNVs use","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/get_sample_sequencing_depths.html","id":null,"dir":"Reference","previous_headings":"","what":"Get sample sequencing depths — get_sample_sequencing_depths","title":"Get sample sequencing depths — get_sample_sequencing_depths","text":"Get sample sequencing depths","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/get_sample_sequencing_depths.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get sample sequencing depths — get_sample_sequencing_depths","text":"","code":"get_sample_sequencing_depths(object, ...)"},{"path":"https://pawelqs.github.io/cevomod/reference/get_sample_sequencing_depths.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get sample sequencing depths — get_sample_sequencing_depths","text":"object object ... args","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/grapes-not-in-grapes.html","id":null,"dir":"Reference","previous_headings":"","what":"Not in operator — %not in%","title":"Not in operator — %not in%","text":"operator","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/grapes-not-in-grapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Not in operator — %not in%","text":"","code":"x %not in% y"},{"path":"https://pawelqs.github.io/cevomod/reference/grapes-not-in-grapes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Not in operator — %not in%","text":"x left-hand side argument y right-hand side argument","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/hide_facet_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Hide facet labels — hide_facet_labels","title":"Hide facet labels — hide_facet_labels","text":"Hide facet labels","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/hide_facet_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hide facet labels — hide_facet_labels","text":"","code":"hide_facet_labels()"},{"path":"https://pawelqs.github.io/cevomod/reference/hide_legend.html","id":null,"dir":"Reference","previous_headings":"","what":"Hide legend — hide_legend","title":"Hide legend — hide_legend","text":"Hide legend","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/hide_legend.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hide legend — hide_legend","text":"","code":"hide_legend()"},{"path":"https://pawelqs.github.io/cevomod/reference/identify_non_neutral_tail_mutations.html","id":null,"dir":"Reference","previous_headings":"","what":"Get selected mutations based on 2 sample models — identify_non_neutral_tail_mutations","title":"Get selected mutations based on 2 sample models — identify_non_neutral_tail_mutations","text":"Get selected mutations based 2 sample models","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/identify_non_neutral_tail_mutations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get selected mutations based on 2 sample models — identify_non_neutral_tail_mutations","text":"","code":"identify_non_neutral_tail_mutations(object, ...)  # S3 method for cevodata identify_non_neutral_tail_mutations(   object,   sample1 = NULL,   sample2 = NULL,   method = \"basic\",   verbose = TRUE,   ... )  # S3 method for singlepatient_cevodata identify_non_neutral_tail_mutations(   object,   sample1 = NULL,   sample2 = NULL,   method = \"basic\",   verbose = TRUE,   ... )"},{"path":"https://pawelqs.github.io/cevomod/reference/identify_non_neutral_tail_mutations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get selected mutations based on 2 sample models — identify_non_neutral_tail_mutations","text":"object object ... arguments sample1 sample1 sample2 sample2 method method verbose lgl","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/init_cevodata.html","id":null,"dir":"Reference","previous_headings":"","what":"Create new cevomod dataset object — init_cevodata","title":"Create new cevomod dataset object — init_cevodata","text":"Create new cevomod dataset object","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/init_cevodata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create new cevomod dataset object — init_cevodata","text":"","code":"init_cevodata(   name,   genome = \"unknown\",   cancer = \"unknown\",   snvs = NULL,   snvs_name = NULL,   cnvs = NULL,   cnvs_name = NULL )"},{"path":"https://pawelqs.github.io/cevomod/reference/init_cevodata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create new cevomod dataset object — init_cevodata","text":"name dataset name genome genome version cancer cancer type driver_genes tbl snvs tibble SNVs snvs_name name SNVs assay cnvs tibble CNVs cnvs_name name CNVs assay","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/init_cevodata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create new cevomod dataset object — init_cevodata","text":"cevodata object","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/list_continuous_palettes.html","id":null,"dir":"Reference","previous_headings":"","what":"Show available palettes from paletteer — list_continuous_palettes","title":"Show available palettes from paletteer — list_continuous_palettes","text":"Show available palettes paletteer","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/list_continuous_palettes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show available palettes from paletteer — list_continuous_palettes","text":"","code":"list_continuous_palettes(packages = c(\"gameofthrones\", \"harrypotter\"))"},{"path":"https://pawelqs.github.io/cevomod/reference/list_continuous_palettes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show available palettes from paletteer — list_continuous_palettes","text":"packages list packages","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/list_continuous_palettes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show available palettes from paletteer — list_continuous_palettes","text":"tbl palettes","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/list_discrete_palettes.html","id":null,"dir":"Reference","previous_headings":"","what":"Show available palettes from paletteer — list_discrete_palettes","title":"Show available palettes from paletteer — list_discrete_palettes","text":"Show available palettes paletteer","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/list_discrete_palettes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show available palettes from paletteer — list_discrete_palettes","text":"","code":"list_discrete_palettes(packages = c(\"PNWColors\"))"},{"path":"https://pawelqs.github.io/cevomod/reference/list_discrete_palettes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show available palettes from paletteer — list_discrete_palettes","text":"packages list packages","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/list_discrete_palettes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show available palettes from paletteer — list_discrete_palettes","text":"tbl palettes","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/list_pnw_palettes.html","id":null,"dir":"Reference","previous_headings":"","what":"Show available palettes from PNWColorspackage — list_pnw_palettes","title":"Show available palettes from PNWColorspackage — list_pnw_palettes","text":"Show available palettes PNWColorspackage","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/list_pnw_palettes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show available palettes from PNWColorspackage — list_pnw_palettes","text":"","code":"list_pnw_palettes()"},{"path":"https://pawelqs.github.io/cevomod/reference/list_pnw_palettes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show available palettes from PNWColorspackage — list_pnw_palettes","text":"palette names","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/merge.cevodata.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge two cevodata objects — merge.cevodata","title":"Merge two cevodata objects — merge.cevodata","text":"Merge two cevodata objects","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/merge.cevodata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge two cevodata objects — merge.cevodata","text":"","code":"# S3 method for cevodata merge(x, y, name = \"Merged datasets\", verbose = TRUE, .id = NULL, ...)"},{"path":"https://pawelqs.github.io/cevomod/reference/merge.cevodata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge two cevodata objects — merge.cevodata","text":"x, y data frames, objects coerced one. name Name merged object verbose Show messages? .id datasets names saved metadata column, provided ... arguments passed methods.","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/mutation_frequencies.html","id":null,"dir":"Reference","previous_headings":"","what":"Calc mutation frequencies — mutation_frequencies","title":"Calc mutation frequencies — mutation_frequencies","text":"Currently method implemented function initializes f column active SNVs slot values VAF column","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/mutation_frequencies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calc mutation frequencies — mutation_frequencies","text":"","code":"calc_mutation_frequencies(object, ...)  # S3 method for cevodata calc_mutation_frequencies(object, method = \"use_VAF\", ...)"},{"path":"https://pawelqs.github.io/cevomod/reference/mutation_frequencies.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calc mutation frequencies — mutation_frequencies","text":"object data object ... arguments method method: \"use_VAF\". methods implemented later","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/mutation_plots.html","id":null,"dir":"Reference","previous_headings":"","what":"Show mutations in particular genes — mutation_plots","title":"Show mutations in particular genes — mutation_plots","text":"Show mutations particular genes","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/mutation_plots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show mutations in particular genes — mutation_plots","text":"","code":"plot_mutations(object, ...)  # S3 method for cevodata plot_mutations(   object,   genes = NULL,   drivers = NULL,   mark_genes = NULL,   y = \"genes\",   shape = \"impact\",   filter_fun = guess_filter_fun(shape),   ... )  # S3 method for tbl_df plot_mutations(   object,   genes = NULL,   drivers = NULL,   mark_genes = NULL,   y = \"genes\",   shape = \"impact\",   filter_fun = guess_filter_fun(shape),   ... )  layer_mutations(   object,   genes = NULL,   drivers = NULL,   show_labels = TRUE,   color = \"black\",   size = 3,   shape = \"impact\",   filter_fun = guess_filter_fun(shape),   ... )"},{"path":"https://pawelqs.github.io/cevomod/reference/mutation_plots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show mutations in particular genes — mutation_plots","text":"object cevodata ... arguments passed geom_point() genes list genes mutations shown drivers cancer type, mutations driver genes shown. Needs taken driver_genes mark_genes list genes mark y show y axis: \"genes\" \"samples\" shape \"impact\" \"variant_classification\"? filter_fun Function filtering mutations: variant_classification_filter() impact_filter() show_labels lgl use ggrepel label mutations? color color size size","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/mutation_plots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show mutations in particular genes — mutation_plots","text":"ggplot obj","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/mutation_plots.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Show mutations in particular genes — mutation_plots","text":"layer_mutations(): Adds mutations SFS plots","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/plot.cevo_Mf_1f_tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot M(f) ~ 1/f — plot.cevo_Mf_1f_tbl","title":"Plot M(f) ~ 1/f — plot.cevo_Mf_1f_tbl","text":"Plot M(f) ~ 1/f","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/plot.cevo_Mf_1f_tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot M(f) ~ 1/f — plot.cevo_Mf_1f_tbl","text":"","code":"# S3 method for cevo_Mf_1f_tbl plot(   x,   from = 0.1,   to = 0.25,   scale = TRUE,   geom = \"point\",   mapping = NULL,   ... )"},{"path":"https://pawelqs.github.io/cevomod/reference/plot.cevo_Mf_1f_tbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot M(f) ~ 1/f — plot.cevo_Mf_1f_tbl","text":"x tibble calc_Mf_1f() results min VAF plot max VAF plot scale scale data? geom ggplot geom use, eg. geom_line() mapping mapping ... futher passed geom_()","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/plot.cevo_Mf_1f_tbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot M(f) ~ 1/f — plot.cevo_Mf_1f_tbl","text":"ggplot obj","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/plot.cevo_Mf_1f_tbl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot M(f) ~ 1/f — plot.cevo_Mf_1f_tbl","text":"","code":"data(\"tcga_brca_test\")  tcga_brca_test |>   calc_Mf_1f() |>   plot_Mf_1f() #> Calculating Williams's M(f) ~ 1/f statistics"},{"path":"https://pawelqs.github.io/cevomod/reference/plot.cevo_SFS_tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot SFS — plot.cevo_SFS_tbl","title":"Plot SFS — plot.cevo_SFS_tbl","text":"Plot SFS","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/plot.cevo_SFS_tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot SFS — plot.cevo_SFS_tbl","text":"","code":"# S3 method for cevo_SFS_tbl plot(x, mapping = NULL, alpha = 0.8, ..., geom = \"bar\")"},{"path":"https://pawelqs.github.io/cevomod/reference/plot.cevo_SFS_tbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot SFS — plot.cevo_SFS_tbl","text":"x tibble calc_SFS() results mapping aes() alpha alpha ... futher passed geom_() geom geom","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/plot.cevo_SFS_tbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot SFS — plot.cevo_SFS_tbl","text":"ggplot obj","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/plot.cevo_cumulative_tails_tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the cumulative tails — plot.cevo_cumulative_tails_tbl","title":"Plot the cumulative tails — plot.cevo_cumulative_tails_tbl","text":"Plot cumulative tails","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/plot.cevo_cumulative_tails_tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the cumulative tails — plot.cevo_cumulative_tails_tbl","text":"","code":"# S3 method for cevo_cumulative_tails_tbl plot(x, scale_y = TRUE, scales = \"loglog\", ...)"},{"path":"https://pawelqs.github.io/cevomod/reference/plot.cevo_cumulative_tails_tbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the cumulative tails — plot.cevo_cumulative_tails_tbl","text":"x tibble calc_cumulative_tails() results scale_y logical scales loglog/semilog ... required Generic","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/plot.cevo_cumulative_tails_tbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the cumulative tails — plot.cevo_cumulative_tails_tbl","text":"ggplot obj","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/plot.cevo_cumulative_tails_tbl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the cumulative tails — plot.cevo_cumulative_tails_tbl","text":"","code":"data(\"tcga_brca_test\") tcga_brca_test |>   calc_cumulative_tails() |>   plot_cumulative_tails()"},{"path":"https://pawelqs.github.io/cevomod/reference/plot_Mf_1f_fits.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot M(f) ~ 1/f fits — plot_Mf_1f_fits","title":"Plot M(f) ~ 1/f fits — plot_Mf_1f_fits","text":"Plot M(f) ~ 1/f fits","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/plot_Mf_1f_fits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot M(f) ~ 1/f fits — plot_Mf_1f_fits","text":"","code":"plot_Mf_1f_fits(object, ...)"},{"path":"https://pawelqs.github.io/cevomod/reference/plot_Mf_1f_fits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot M(f) ~ 1/f fits — plot_Mf_1f_fits","text":"object cevodata object ... params","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/plot_models.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot cevodata models — plot_models","title":"Plot cevodata models — plot_models","text":"Plot cevodata models","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/plot_models.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot cevodata models — plot_models","text":"","code":"plot_models(object, ...)  # S3 method for cevodata plot_models(   object,   models_name = active_models(object),   neutral_tail = TRUE,   binomial_layer = FALSE,   subclones = TRUE,   final_fit = TRUE,   neutral_tail_alpha = 0.3,   neutral_tail_size = 0.5,   neutral_tail_fill = \"white\",   neutral_tail_color = \"gray90\",   binomial_layer_color = \"black\",   final_fit_color = \"red\",   final_fit_size = 1,   nrow = NULL,   ncol = NULL,   ... )"},{"path":"https://pawelqs.github.io/cevomod/reference/plot_models.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot cevodata models — plot_models","text":"object cevodata object ... arguments passed plot_SFS() models_name models name neutral_tail TRUE, binomial_layer FALSE, subclones TRUE, final_fit TRUE, neutral_tail_alpha 0.3 neutral_tail_size 0.5 neutral_tail_fill \"white\" neutral_tail_color \"gray90\" binomial_layer_color \"black\" final_fit_color \"red\" final_fit_size 1 nrow passed facet_wrap ncol passed facet_wrap","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/plot_neutral_A_coefficients.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot 'a' coefficients for all fitted neutral models — plot_neutral_A_coefficients","title":"Plot 'a' coefficients for all fitted neutral models — plot_neutral_A_coefficients","text":"Plot '' coefficients fitted neutral models","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/plot_neutral_A_coefficients.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot 'a' coefficients for all fitted neutral models — plot_neutral_A_coefficients","text":"","code":"plot_neutral_A_coefficients(object, model_name = \"williams_neutral\", ...)"},{"path":"https://pawelqs.github.io/cevomod/reference/plot_neutral_A_coefficients.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot 'a' coefficients for all fitted neutral models — plot_neutral_A_coefficients","text":"object cevodata object model_name modelname ... parameters passed geom","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/plot_non_neutral_mutations_2D.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot heatmap of non neutral mutations — plot_non_neutral_mutations_2D","title":"Plot heatmap of non neutral mutations — plot_non_neutral_mutations_2D","text":"Plot heatmap non neutral mutations","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/plot_non_neutral_mutations_2D.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot heatmap of non neutral mutations — plot_non_neutral_mutations_2D","text":"","code":"plot_non_neutral_mutations_2D(object, ...)  # S3 method for cevodata plot_non_neutral_mutations_2D(object, colors = c(\"black\", \"white\", \"red\"), ...)"},{"path":"https://pawelqs.github.io/cevomod/reference/plot_non_neutral_mutations_2D.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot heatmap of non neutral mutations — plot_non_neutral_mutations_2D","text":"object object ... arguments colors vector three colors use","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/plot_private_shared_mutations.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot proportions of private and shared mutations — plot_private_shared_mutations","title":"Plot proportions of private and shared mutations — plot_private_shared_mutations","text":"Plot proportions private shared mutations","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/plot_private_shared_mutations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot proportions of private and shared mutations — plot_private_shared_mutations","text":"","code":"plot_private_shared_mutations(object, ...)  # S3 method for cevodata plot_private_shared_mutations(object, geom = geom_bar, ...)"},{"path":"https://pawelqs.github.io/cevomod/reference/plot_private_shared_mutations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot proportions of private and shared mutations — plot_private_shared_mutations","text":"object cevodata ... params geom change geom","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/plot_private_shared_mutations.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Plot proportions of private and shared mutations — plot_private_shared_mutations","text":"plot_private_shared_mutations(cevodata): Plot private shared mutation fractions","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/plot_residuals.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot model residuals — plot_residuals","title":"Plot model residuals — plot_residuals","text":"Plot model residuals","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/plot_residuals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot model residuals — plot_residuals","text":"","code":"plot_sampling_rate(object, ...)  # S3 method for cevodata plot_sampling_rate(object, mapping = NULL, geom = geom_point, ...)  plot_residuals_powerlaw_model(object, ...)  # S3 method for cevodata plot_residuals_powerlaw_model(   object,   models_name = active_models(object),   mapping = NULL,   geom = geom_point,   fit_clones = TRUE,   ... )  plot_residuals_full_model(object, ...)  # S3 method for cevodata plot_residuals_full_model(object, mapping = NULL, geom = geom_point, ...)  plot_binomial_fits_vs_powerlaw_residuals_bars(   object,   models_name = active_models(object),   mapping = NULL,   geom = geom_bar,   fit_clones = TRUE,   ... )"},{"path":"https://pawelqs.github.io/cevomod/reference/plot_residuals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot model residuals — plot_residuals","text":"object cevodata object ... parameters mapping mapping elements overwrite default mapping geom geom use models_name models_name fit_clones plot clonal fits?","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/plot_residuals.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Plot model residuals — plot_residuals","text":"plot_sampling_rate(cevodata): Plot sampling rate plot_residuals_powerlaw_model(cevodata): Plot residuals neutral model plot_residuals_full_model(cevodata): Plot residuals full model plot_binomial_fits_vs_powerlaw_residuals_bars(): Plot binomial fits vs powerlaw residuals (barplot)","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/plot_sequencing_depth.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot sequencing depth of cevodata — plot_sequencing_depth","title":"Plot sequencing depth of cevodata — plot_sequencing_depth","text":"Plot sequencing depth cevodata","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/plot_sequencing_depth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot sequencing depth of cevodata — plot_sequencing_depth","text":"","code":"plot_sequencing_depth(object, ...)  # S3 method for cevodata plot_sequencing_depth(   object,   snvs_name = default_SNVs(object),   geom = geom_boxplot,   ... )  # S3 method for cevo_snvs plot_sequencing_depth(object, geom = geom_boxplot, ...)"},{"path":"https://pawelqs.github.io/cevomod/reference/plot_sequencing_depth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot sequencing depth of cevodata — plot_sequencing_depth","text":"object cevodata cevo_snvs ... params passed geom snvs_name name SNVs table geom change geom","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/plot_sequencing_depth.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Plot sequencing depth of cevodata — plot_sequencing_depth","text":"plot_sequencing_depth(cevodata): Plot sequencing data mutations cevodata plot_sequencing_depth(cevo_snvs): Plot sequencing data mutations cevodata","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/prepare_SNVs.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare SNVs for analyses — prepare_SNVs","title":"Prepare SNVs for analyses — prepare_SNVs","text":"Prepare SNVs analyses","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/prepare_SNVs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare SNVs for analyses — prepare_SNVs","text":"","code":"prepare_SNVs(object, which = default_SNVs(object), bins = NULL)"},{"path":"https://pawelqs.github.io/cevomod/reference/prepare_SNVs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare SNVs for analyses — prepare_SNVs","text":"object cevodata obj SNVs use bins number VAF interval bins","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/print_palettes.html","id":null,"dir":"Reference","previous_headings":"","what":"Show palettes — print_palettes","title":"Show palettes — print_palettes","text":"Show palettes","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/print_palettes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show palettes — print_palettes","text":"","code":"print_palettes(packages = c(\"PNWColors\", \"nord\"), n = 10)"},{"path":"https://pawelqs.github.io/cevomod/reference/print_palettes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show palettes — print_palettes","text":"packages list packages n number colors","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/quick_save.html","id":null,"dir":"Reference","previous_headings":"","what":"Quick save to ~/.cevomod directory — quick_save","title":"Quick save to ~/.cevomod directory — quick_save","text":"Quick save ~/.cevomod directory","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/quick_save.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quick save to ~/.cevomod directory — quick_save","text":"","code":"quick_save(object)  quick_load()"},{"path":"https://pawelqs.github.io/cevomod/reference/quick_save.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quick save to ~/.cevomod directory — quick_save","text":"object object save","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/quick_save.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Quick save to ~/.cevomod directory — quick_save","text":"quick_load(): Quick load ~/.cevomod/object.Rds","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. dplyr filter","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/rotate_x_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Rotate x axix labels — rotate_x_labels","title":"Rotate x axix labels — rotate_x_labels","text":"Rotate x axix labels","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/rotate_x_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rotate x axix labels — rotate_x_labels","text":"","code":"rotate_x_labels(angle = 90, vjust = 0.5)"},{"path":"https://pawelqs.github.io/cevomod/reference/rotate_x_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rotate x axix labels — rotate_x_labels","text":"angle angle vjust vjust","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/run_browser.html","id":null,"dir":"Reference","previous_headings":"","what":"Run cevobrowser app — run_browser","title":"Run cevobrowser app — run_browser","text":"Run cevobrowser app","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/run_browser.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run cevobrowser app — run_browser","text":"","code":"run_browser()"},{"path":"https://pawelqs.github.io/cevomod/reference/run_cevomod.html","id":null,"dir":"Reference","previous_headings":"","what":"Run cevodata pipeline — run_cevomod","title":"Run cevodata pipeline — run_cevomod","text":"Run cevodata pipeline","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/run_cevomod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run cevodata pipeline — run_cevomod","text":"","code":"run_cevomod(object, ...)"},{"path":"https://pawelqs.github.io/cevomod/reference/run_cevomod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run cevodata pipeline — run_cevomod","text":"object cevodata object ... args","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/scale_color_pnw.html","id":null,"dir":"Reference","previous_headings":"","what":"Use PNWColors palette — scale_color_pnw","title":"Use PNWColors palette — scale_color_pnw","text":"Use PNWColors palette","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/scale_color_pnw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use PNWColors palette — scale_color_pnw","text":"","code":"scale_color_pnw(palette = \"Sunset\", direction = 1, dynamic = FALSE, ...)"},{"path":"https://pawelqs.github.io/cevomod/reference/scale_color_pnw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use PNWColors palette — scale_color_pnw","text":"palette palette name direction 1/-1 dynamic TRUE/FALSE ... additional arguments pass discrete_scale","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/scale_fill_cevomod.html","id":null,"dir":"Reference","previous_headings":"","what":"Different color pallettes — scale_fill_cevomod","title":"Different color pallettes — scale_fill_cevomod","text":"Different color pallettes","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/scale_fill_cevomod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Different color pallettes — scale_fill_cevomod","text":"","code":"scale_fill_cevomod(palette = \"starfleet\", ...)  scale_color_cevomod(palette = \"starfleet\", ...)"},{"path":"https://pawelqs.github.io/cevomod/reference/scale_fill_cevomod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Different color pallettes — scale_fill_cevomod","text":"palette palette name ... arguments passed scale_*_manual()","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/scale_fill_pnw.html","id":null,"dir":"Reference","previous_headings":"","what":"Use PNWColors palette — scale_fill_pnw","title":"Use PNWColors palette — scale_fill_pnw","text":"Use PNWColors palette","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/scale_fill_pnw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use PNWColors palette — scale_fill_pnw","text":"","code":"scale_fill_pnw(palette = \"Sunset\", direction = 1, dynamic = FALSE, ...)"},{"path":"https://pawelqs.github.io/cevomod/reference/scale_fill_pnw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use PNWColors palette — scale_fill_pnw","text":"palette palette name direction 1/-1 dynamic TRUE/FALSE ... additional arguments pass discrete_scale","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/set_cancer_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Set cancer type for the object — set_cancer_type","title":"Set cancer type for the object — set_cancer_type","text":"Set cancer type object","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/set_cancer_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set cancer type for the object — set_cancer_type","text":"","code":"set_cancer_type(object, ...)  # S3 method for cevodata set_cancer_type(object, cancer_type, ...)"},{"path":"https://pawelqs.github.io/cevomod/reference/set_cancer_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set cancer type for the object — set_cancer_type","text":"object object set cancer type ... arguments cancer_type cancer type","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/set_cancer_type.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Set cancer type for the object — set_cancer_type","text":"set_cancer_type(cevodata): Set cancer type cevodata object","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/sfs.html","id":null,"dir":"Reference","previous_headings":"","what":"Site Frequency Spectra — sfs","title":"Site Frequency Spectra — sfs","text":"Creates  cevodata$models$SFS groupping variables : n columnt number mutations VAF interval x y columns describing SFS y_scaled y values scaled range 0-1","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/sfs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Site Frequency Spectra — sfs","text":"","code":"calc_SFS(object, ...)  # S3 method for cevodata calc_SFS(object, bins = NULL, ...)  # S3 method for cevo_snvs calc_SFS(object, bins = NULL, ...)  plot_SFS(object, ...)  # S3 method for cevodata plot_SFS(object, mapping = NULL, ..., geom = \"bar\")  get_SFS(object, ...)  # S3 method for cevodata get_SFS(object, model_name = \"SFS\", verbose = TRUE, ...)"},{"path":"https://pawelqs.github.io/cevomod/reference/sfs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Site Frequency Spectra — sfs","text":"object SNVs tibble object ... arguments bins resolution cumulative tails calculation mapping aes() geom geom model_name name slot SFS statistics verbose verbose?","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/sfs.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Site Frequency Spectra — sfs","text":"calc_SFS(): Calculate SFS calc_SFS(cevodata): Calculate SFS calc_SFS(cevo_snvs): Calculate SFS plot_SFS(): Plot SFS plot_SFS(cevodata): Plot SFS get_SFS(): Get SFS get_SFS(cevodata): Get SFS","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/sfs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Site Frequency Spectra — sfs","text":"","code":"data(\"tcga_brca_test\")  tcga_brca_test |>   calc_SFS() |>   plot_SFS() +   layer_mutations(tcga_brca_test, drivers = \"BRCA\") #> Warning: Ignoring unknown aesthetics: width #> Warning: Ignoring unknown aesthetics: shape #> Warning: ggrepel: 15 unlabeled data points (too many overlaps). Consider increasing max.overlaps #> Warning: ggrepel: 8 unlabeled data points (too many overlaps). Consider increasing max.overlaps #> Warning: ggrepel: 19 unlabeled data points (too many overlaps). Consider increasing max.overlaps #> Warning: ggrepel: 16 unlabeled data points (too many overlaps). Consider increasing max.overlaps"},{"path":"https://pawelqs.github.io/cevomod/reference/shuffle.html","id":null,"dir":"Reference","previous_headings":"","what":"Shuffle order of elements in object — shuffle","title":"Shuffle order of elements in object — shuffle","text":"Shuffle order elements object","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/shuffle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shuffle order of elements in object — shuffle","text":"","code":"shuffle(object, ...)  # S3 method for tbl_df shuffle(object, ...)"},{"path":"https://pawelqs.github.io/cevomod/reference/shuffle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shuffle order of elements in object — shuffle","text":"object object shuffle ... arguments","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/shuffle.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Shuffle order of elements in object — shuffle","text":"shuffle(tbl_df): Shuffle order rows tibble","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/shuffle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Shuffle order of elements in object — shuffle","text":"","code":"tibble::tibble(i = 1:10) |>   shuffle() #> # A tibble: 10 × 1 #>        i #>    <int> #>  1     5 #>  2     7 #>  3     6 #>  4     3 #>  5    10 #>  6     2 #>  7     1 #>  8     8 #>  9     9 #> 10     4"},{"path":"https://pawelqs.github.io/cevomod/reference/split_by.html","id":null,"dir":"Reference","previous_headings":"","what":"Split object — split_by","title":"Split object — split_by","text":"Split object","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/split_by.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split object — split_by","text":"","code":"split_by(object, ...)  # S3 method for cevodata split_by(object, x, ...)"},{"path":"https://pawelqs.github.io/cevomod/reference/split_by.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split object — split_by","text":"object cevodata object ... arguments x name column metadata","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/split_by.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Split object — split_by","text":"split_by(cevodata): Split cevodata object","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/stat_SFS.html","id":null,"dir":"Reference","previous_headings":"","what":"SFS stat — stat_SFS","title":"SFS stat — stat_SFS","text":"Modification stat_bin custom parameters","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/stat_SFS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SFS stat — stat_SFS","text":"","code":"stat_SFS(   mapping = NULL,   data = NULL,   binwidth = 0.01,   geom = \"line\",   position = \"identity\",   ... )"},{"path":"https://pawelqs.github.io/cevomod/reference/stat_SFS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SFS stat — stat_SFS","text":"mapping aes() data data binwidth binwidth geom geom position position ... args passed stat_bin","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/stat_cumulative_tail.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Cumulative Tail — stat_cumulative_tail","title":"Plot Cumulative Tail — stat_cumulative_tail","text":"Visualise distribution single continuous variable dividing x axis bins counting number observations bin. Histograms (geom_histogram()) display counts bars; frequency polygons (geom_freqpoly()) display counts lines. Frequency polygons suitable want compare distribution across levels categorical variable.","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/stat_cumulative_tail.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Cumulative Tail — stat_cumulative_tail","text":"","code":"stat_cumulative_tail(   mapping = NULL,   data = NULL,   geom = \"point\",   position = \"identity\",   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE,   bins = 100,   ... )"},{"path":"https://pawelqs.github.io/cevomod/reference/stat_cumulative_tail.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Cumulative Tail — stat_cumulative_tail","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). geom geom position Position adjustment, either string naming adjustment (e.g. \"jitter\" use position_jitter), result call position adjustment function. Use latter need change settings adjustment. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). bins number bins ... arguments passed layer(). often aesthetics, used set aesthetic fixed value, like colour = \"red\" size = 3. may also parameters paired geom/stat.","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/stat_cumulative_tail.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Cumulative Tail — stat_cumulative_tail","text":"stat_bin() suitable continuous x data. x data discrete, probably want use stat_count(). default, underlying computation (stat_bin()) uses 30 bins; good default, idea get experimenting different number bins. can also experiment modifying binwidth center boundary arguments. binwidth overrides bins one change time. may need look options uncover full story behind data. addition geom_histogram(), can create histogram plot using scale_x_binned() geom_bar(). method default plots tick marks bar.","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/stat_cumulative_tail.html","id":"orientation","dir":"Reference","previous_headings":"","what":"Orientation","title":"Plot Cumulative Tail — stat_cumulative_tail","text":"geom treats axis differently , thus, can thus two orientations. Often orientation easy deduce combination given mappings types positional scales use. Thus, ggplot2 default try guess orientation layer . rare circumstances, orientation ambiguous guessing may fail. case orientation can specified directly using orientation parameter, can either \"x\" \"y\". value gives axis geom run along, \"x\" default orientation expect geom.","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/stat_cumulative_tail.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Plot Cumulative Tail — stat_cumulative_tail","text":"geom_histogram() uses aesthetics geom_bar(); geom_freqpoly() uses aesthetics geom_line().","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/stat_cumulative_tail.html","id":"computed-variables","dir":"Reference","previous_headings":"","what":"Computed variables","title":"Plot Cumulative Tail — stat_cumulative_tail","text":"calculated 'stat' part layers can accessed delayed evaluation. after_stat(count) number points bin. after_stat(density) density points bin, scaled integrate 1. after_stat(ncount) count, scaled maximum 1. after_stat(ndensity) density, scaled maximum 1. after_stat(width) widths bins.","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/stat_cumulative_tail.html","id":"dropped-variables","dir":"Reference","previous_headings":"","what":"Dropped variables","title":"Plot Cumulative Tail — stat_cumulative_tail","text":"weight binning, weights individual data points (supplied) longer available.","code":""},{"path":[]},{"path":"https://pawelqs.github.io/cevomod/reference/stat_cumulative_tail.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Cumulative Tail — stat_cumulative_tail","text":"","code":"library(ggplot2) data(\"tcga_brca_test\") snvs <- SNVs(tcga_brca_test)  ggplot(snvs, aes(VAF, color = sample_id)) +  stat_cumulative_tail()   ggplot(snvs, aes(VAF, y = stat(y), color = sample_id)) +  stat_cumulative_tail() #> Warning: `stat(y)` was deprecated in ggplot2 3.4.0. #> ℹ Please use `after_stat(y)` instead."},{"path":"https://pawelqs.github.io/cevomod/reference/tcga_brca.html","id":null,"dir":"Reference","previous_headings":"","what":"TCGA BRCA cevodata dataset — tcga_brca","title":"TCGA BRCA cevodata dataset — tcga_brca","text":"TCGA BRCA cevodata dataset","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/tcga_brca_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Small TCGA BRCA cevodata dataset — tcga_brca_test","title":"Small TCGA BRCA cevodata dataset — tcga_brca_test","text":"Small TCGA BRCA cevodata dataset","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/theme_ellie.html","id":null,"dir":"Reference","previous_headings":"","what":"Theme Ellie — theme_ellie","title":"Theme Ellie — theme_ellie","text":"Theme Ellie","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/theme_ellie.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Theme Ellie — theme_ellie","text":"","code":"theme_ellie(n = 6)"},{"path":"https://pawelqs.github.io/cevomod/reference/theme_ellie.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Theme Ellie — theme_ellie","text":"n number colors","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/tung_durrett.html","id":null,"dir":"Reference","previous_headings":"","what":"Fitting Tung Durrett models — tung_durrett","title":"Fitting Tung Durrett models — tung_durrett","text":"fit_tung_durrett_models() uses stats::optim find optimal alpha whch maximizes SFS area powerlaw curve (sampled region SFS range VAF values maximum SFS value count) minimizes negative error - curve real SFS (sampled count). Penalty negative error depends number points negative error value. Penalty value sum error values power x, x length vector negative error values. allows powerlaw curve detach SFS 1 two bins, penalty rises extremely.","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/tung_durrett.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fitting Tung Durrett models — tung_durrett","text":"","code":"fit_tung_durrett_models(object, ...)  # S3 method for cevodata fit_tung_durrett_models(   object,   name = \"tung_durrett\",   allowed_zero_bins = 2,   y_treshold = 1,   y_threshold_pct = 0.01,   av_filter = c(1/3, 1/3, 1/3),   peak_detection_upper_limit = 0.3,   reward_upper_limit = 0.4,   control = list(maxit = 1000, ndeps = c(0.1, 0.01)),   verbose = TRUE,   ... )"},{"path":"https://pawelqs.github.io/cevomod/reference/tung_durrett.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fitting Tung Durrett models — tung_durrett","text":"object cevodata ... arguments passed stats::optim() name name models' slot allowed_zero_bins number allowed empty bins interval y_treshold bins less mutations considered empty y_threshold_pct bins less mutations param times height higherst peak considered empty av_filter average filter values applied VAF peak_detection_upper_limit upper VAF value main peak searched reward_upper_limit mutations curve limit rewarded control control param stats::optim() verbose verbose?","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/tung_durrett.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fitting Tung Durrett models — tung_durrett","text":"","code":"data(\"tcga_brca_test\") cd <- tcga_brca_test |>   dplyr::filter(sample_id %in% c(\"TCGA-AC-A23H-01\",\"TCGA-AN-A046-01\")) |>   fit_tung_durrett_models() #> Fitting Tung-Durrett models... #> Models fitted in 1.45942544937134 seconds"},{"path":"https://pawelqs.github.io/cevomod/reference/update.cevodata.html","id":null,"dir":"Reference","previous_headings":"","what":"Update cevodata object with values from another object — update.cevodata","title":"Update cevodata object with values from another object — update.cevodata","text":"Update cevodata object values another object","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/update.cevodata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update cevodata object with values from another object — update.cevodata","text":"","code":"# S3 method for cevodata update(object, object2, ...)"},{"path":"https://pawelqs.github.io/cevomod/reference/update.cevodata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update cevodata object with values from another object — update.cevodata","text":"object object update object2 object use ... args, unused now","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/variant_classification.html","id":null,"dir":"Reference","previous_headings":"","what":"Custom Variant Classification — variant_classification","title":"Custom Variant Classification — variant_classification","text":"Custom Variant Classification","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/variant_classification_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter mutations by variant_classification field — variant_classification_filter","title":"Filter mutations by variant_classification field — variant_classification_filter","text":"Filter mutations variant_classification field","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/variant_classification_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter mutations by variant_classification field — variant_classification_filter","text":"","code":"variant_classification_filter(keep = c(\"nonsilent\", \"null\"))  impact_filter(keep = c(\"HIGH\", \"MODERATE\"))"},{"path":"https://pawelqs.github.io/cevomod/reference/variant_classification_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter mutations by variant_classification field — variant_classification_filter","text":"keep values keep","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/variant_classification_filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter mutations by variant_classification field — variant_classification_filter","text":"filtering function","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/variant_classification_filter.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Filter mutations by variant_classification field — variant_classification_filter","text":"impact_filter(): Filter mutations impact field","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/williams_neutral_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Fitting neutral models — williams_neutral_model","title":"Fitting neutral models — williams_neutral_model","text":"Creates  cevodata$models$neutral_model","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/williams_neutral_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fitting neutral models — williams_neutral_model","text":"","code":"fit_williams_neutral_models(object, ...)  # S3 method for cevodata fit_williams_neutral_models(   object,   rsq_treshold = 0.98,   name = \"williams_neutral\",   pct_left = 0.05,   pct_right = 0.95,   verbose = TRUE,   ... )  layer_lm_fits(cd, model_name = \"williams_neutral\", ...)"},{"path":"https://pawelqs.github.io/cevomod/reference/williams_neutral_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fitting neutral models — williams_neutral_model","text":"object SNVs tibble object ... params passed geom_segment() rsq_treshold R-squared tresholds keep model neutral name name models' slot pct_left drop pct lowerst frequency variants improve fit pct_right drop pct highest frequency variants improve fit verbose verbose? cd cevodata model_name modelname","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/williams_neutral_model.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Fitting neutral models — williams_neutral_model","text":"layer_lm_fits(): Add M(f) ~ 1/f models layer M(f) ~ 1/f plot","code":""},{"path":"https://pawelqs.github.io/cevomod/reference/williams_neutral_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fitting neutral models — williams_neutral_model","text":"","code":"data(\"tcga_brca_test\") snvs <- SNVs(tcga_brca_test) |>   dplyr::filter(sample_id %in% c(\"TCGA-AC-A23H-01\",\"TCGA-AN-A046-01\"))  cd <- init_cevodata(\"Test\") |>   add_SNV_data(snvs) |>   calc_Mf_1f() |>   calc_SFS() |>   fit_williams_neutral_models(rsq_treshold = 0.99) #> Calculating Williams's M(f) ~ 1/f statistics #> Fitting williams neutral models...  plot(cd$models$Mf_1f, from = 0.05, to = 0.4, scale = FALSE) +   layer_lm_fits(cd)"},{"path":"https://pawelqs.github.io/cevomod/news/index.html","id":"cevomod-06x","dir":"Changelog","previous_headings":"","what":"cevomod 0.6.x","title":"cevomod 0.6.x","text":"v0.6.0 fitting subclones using BMix","code":""},{"path":"https://pawelqs.github.io/cevomod/news/index.html","id":"cevomod-05x","dir":"Changelog","previous_headings":"","what":"cevomod 0.5.x","title":"cevomod 0.5.x","text":"fitting Tung-Durrett models implemented compare_models() implemented Full Williams code esitmation selection coefficients included","code":""},{"path":"https://pawelqs.github.io/cevomod/news/index.html","id":"cevomod-04x","dir":"Changelog","previous_headings":"","what":"cevomod 0.4.x","title":"cevomod 0.4.x","text":"v0.4.0 calculation mutation rates selection coefficients Williams implemented","code":""},{"path":"https://pawelqs.github.io/cevomod/news/index.html","id":"cevomod-03x","dir":"Changelog","previous_headings":"","what":"cevomod 0.3.x","title":"cevomod 0.3.x","text":"Residuals plotting done shiny app browsing results implemented v0.3.5 experimental models joining","code":""},{"path":"https://pawelqs.github.io/cevomod/news/index.html","id":"cevomod-020","dir":"Changelog","previous_headings":"","what":"cevomod 0.2.0","title":"cevomod 0.2.0","text":"Binomial model fitting plotting v1","code":""},{"path":"https://pawelqs.github.io/cevomod/news/index.html","id":"cevomod-010","dir":"Changelog","previous_headings":"","what":"cevomod 0.1.0","title":"cevomod 0.1.0","text":"Neutral model fitting plotting v1 cevodata class implemented Added NEWS.md file track changes package.","code":""}]
